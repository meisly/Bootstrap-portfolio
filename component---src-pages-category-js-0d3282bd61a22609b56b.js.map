{"version":3,"sources":["webpack:///./src/components/List/List.js","webpack:///./src/components/List/index.js","webpack:///./src/pages/category.js","webpack:///./src/components/Article/Headline.js"],"names":["List","props","edges","theme","Fragment","space","stack","m","xs","font","size","s","lineHeight","l","map","edge","node","title","frontmatter","slug","fields","key","to","CategoryPage","data","posts","facebook","site","siteMetadata","categories","forEach","category","push","categoryList","Consumer","color","brand","primary","item","query","Headline","children","xxl","time","duration","long","weight","standard","xl"],"mappings":"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","file":"component---src-pages-category-js-0d3282bd61a22609b56b.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst List = props => {\n  const { edges, theme } = props;\n\n  return (\n    <React.Fragment>\n      <ul>\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug }\n            }\n          } = edge;\n\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        ul {\n          margin: ${theme.space.stack.m};\n          padding: ${theme.space.m};\n          list-style: circle;\n        }\n        li {\n          padding: ${theme.space.xs} 0;\n          font-size: ${theme.font.size.s};\n          line-height: ${theme.font.lineHeight.l};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default List;\n","export { default } from \"./List\";\r\n","import { FaTag } from \"react-icons/fa/\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article/\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\nimport Seo from \"../components/Seo\";\n\nconst CategoryPage = props => {\n  const {\n    data: {\n      posts: { edges: posts },\n      site: {\n        siteMetadata: { facebook }\n      }\n    }\n  } = props;\n\n  // Create category list\n  const categories = {};\n  posts.forEach(edge => {\n    const {\n      node: {\n        frontmatter: { category }\n      }\n    } = edge;\n\n    if (category && category != null) {\n      if (!categories[category]) {\n        categories[category] = [];\n      }\n      categories[category].push(edge);\n    }\n  });\n\n  const categoryList = [];\n\n  for (var key in categories) {\n    categoryList.push([key, categories[key]]);\n  }\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <header>\n              <Headline title=\"Posts by categories\" theme={theme} />\n            </header>\n            {categoryList.map(item => (\n              <section key={item[0]}>\n                <h2>\n                  <FaTag /> {item[0]}\n                </h2>\n                <List edges={item[1]} theme={theme} />\n              </section>\n            ))}\n            {/* --- STYLES --- */}\n            <style jsx>{`\n              h2 {\n                margin: 0 0 0.5em;\n              }\n              h2 :global(svg) {\n                height: 0.8em;\n                fill: ${theme.color.brand.primary};\n              }\n            `}</style>\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo facebook={facebook} />\n    </React.Fragment>\n  );\n};\n\nCategoryPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default CategoryPage;\n\n//eslint-disable-next-line no-undef\nexport const query = graphql`\n  query PostsQuery {\n    posts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//posts/[0-9]+.*--/\" } }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            prefix\n          }\n          frontmatter {\n            title\n            category\n            author\n            cover {\n              children {\n                ... on ImageSharp {\n                  fluid(maxWidth: 800, maxHeight: 360) {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        facebook {\n          appId\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Headline = props => {\r\n  const { title, children, theme } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {title ? <h1>{title}</h1> : <h1>{children}</h1>}\r\n\r\n      {/* --- STYLES --- */}\r\n      <style jsx>{`\r\n        h1 {\r\n          font-size: ${theme.font.size.xxl};\r\n          margin: ${theme.space.stack.l};\r\n          animation-name: headlineEntry;\r\n          animation-duration: ${theme.time.duration.long};\r\n\r\n          :global(span) {\r\n            font-weight: ${theme.font.weight.standard};\r\n            display: block;\r\n            font-size: 0.5em;\r\n            letter-spacing: 0;\r\n            margin: ${theme.space.stack.xs};\r\n          }\r\n\r\n          :global(svg) {\r\n            height: 0.75em;\r\n            fill: ${theme.color.brand.primary};\r\n          }\r\n        }\r\n\r\n        @keyframes headlineEntry {\r\n          from {\r\n            opacity: 0.5;\r\n          }\r\n          to {\r\n            opacity: 1;\r\n          }\r\n        }\r\n\r\n        @from-width tablet {\r\n          h1 {\r\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\r\n          }\r\n        }\r\n\r\n        @from-width desktop {\r\n          h1 {\r\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\r\n          }\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nHeadline.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Headline;\r\n"],"sourceRoot":""}