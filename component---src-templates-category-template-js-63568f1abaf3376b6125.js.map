{"version":3,"sources":["webpack:///./src/components/List/List.js","webpack:///./src/components/List/index.js","webpack:///./src/components/Article/Headline.js","webpack:///./src/templates/CategoryTemplate.js"],"names":["List","props","edges","theme","Fragment","space","stack","m","xs","font","size","s","lineHeight","l","map","edge","node","title","frontmatter","slug","fields","key","to","Headline","children","xxl","time","duration","long","weight","standard","color","brand","primary","xl","CategoryTemplate","category","pageContext","data","allMarkdownRemark","totalCount","facebook","site","siteMetadata","Consumer","className","categoryQuery"],"mappings":"sJAgDeA,EA5CF,SAAAC,GAAU,IACbC,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MAEf,OACE,kBAAC,IAAMC,SAAP,KACE,6DAoBcD,EAAME,MAAMC,MAAMC,EACjBJ,EAAME,MAAME,EAIZJ,EAAME,MAAMG,GACVL,EAAMM,KAAKC,KAAKC,EACdR,EAAMM,KAAKG,WAAWC,OA1BtCX,EAAMY,KAAI,SAAAC,GAAS,IAAD,EAMbA,EAJFC,KACiBC,EAHF,EAGbC,YAAeD,MACLE,EAJG,EAIbC,OAAUD,KAId,OACE,wBAAIE,IAAKF,EAAT,qCAUQhB,EAAME,MAAMC,MAAMC,EACjBJ,EAAME,MAAME,EAIZJ,EAAME,MAAMG,GACVL,EAAMM,KAAKC,KAAKC,EACdR,EAAMM,KAAKG,WAAWC,OAhBjC,kBAAC,OAAD,CAAMS,GAAIH,GAAOF,QAZ3B,0FAqBgBd,EAAME,MAAMC,MAAMC,EArBlC,YAsBiBJ,EAAME,MAAME,EAtB7B,kEA0BiBJ,EAAME,MAAMG,GA1B7B,gBA2BmBL,EAAMM,KAAKC,KAAKC,EA3BnC,gBA4BqBR,EAAMM,KAAKG,WAAWC,EA5B3C,eAqBgBV,EAAME,MAAMC,MAAMC,EACjBJ,EAAME,MAAME,EAIZJ,EAAME,MAAMG,GACVL,EAAMM,KAAKC,KAAKC,EACdR,EAAMM,KAAKG,WAAWC,OCpC/C,mC,gFC+DeU,IA5DE,SAAAtB,GAAU,IACjBgB,EAA2BhB,EAA3BgB,MAAOO,EAAoBvB,EAApBuB,SAAUrB,EAAUF,EAAVE,MAEzB,OACE,kBAAC,IAAMC,SAAP,KACGa,EAAQ,8DAKQd,EAAMM,KAAKC,KAAKe,IACnBtB,EAAME,MAAMC,MAAMO,EAENV,EAAMuB,KAAKC,SAASC,KAGzBzB,EAAMM,KAAKoB,OAAOC,SAIvB3B,EAAME,MAAMC,MAAME,GAKpBL,EAAM4B,MAAMC,MAAMC,QApBvB,QAmCkB9B,EAAMM,KAAKC,KAAKwB,GAnClC,kBAyCkB/B,EAAMM,KAAKC,KAAKwB,GAzClC,eAAKjB,GAAc,8DAKXd,EAAMM,KAAKC,KAAKe,IACnBtB,EAAME,MAAMC,MAAMO,EAENV,EAAMuB,KAAKC,SAASC,KAGzBzB,EAAMM,KAAKoB,OAAOC,SAIvB3B,EAAME,MAAMC,MAAME,GAKpBL,EAAM4B,MAAMC,MAAMC,QApBJ,QAmCD9B,EAAMM,KAAKC,KAAKwB,GAnCf,kBAyCD/B,EAAMM,KAAKC,KAAKwB,GAzCf,eAAKV,GADnC,8FAMmBrB,EAAMM,KAAKC,KAAKe,IANnC,WAOgBtB,EAAME,MAAMC,MAAMO,EAPlC,gMAS4BV,EAAMuB,KAAKC,SAASC,KAThD,+BAS4BzB,EAAMuB,KAAKC,SAASC,KAThD,uBAS4BzB,EAAMuB,KAAKC,SAASC,KAThD,yDAYuBzB,EAAMM,KAAKoB,OAAOC,SAZzC,8HAgBkB3B,EAAME,MAAMC,MAAME,GAhBpC,+DAqBgBL,EAAM4B,MAAMC,MAAMC,QArBlC,sZAoC6B9B,EAAMM,KAAKC,KAAKwB,GApC7C,oGA0C6B/B,EAAMM,KAAKC,KAAKwB,GA1C7C,uBAMmB/B,EAAMM,KAAKC,KAAKe,IACnBtB,EAAME,MAAMC,MAAMO,EAENV,EAAMuB,KAAKC,SAASC,KAGzBzB,EAAMM,KAAKoB,OAAOC,SAIvB3B,EAAME,MAAMC,MAAME,GAKpBL,EAAM4B,MAAMC,MAAMC,QArBlC,QAoC6B9B,EAAMM,KAAKC,KAAKwB,GApC7C,kBA0C6B/B,EAAMM,KAAKC,KAAKwB,GA1C7C,gB,kCCPJ,sJAsDeC,UA5CU,SAAAlC,GAAU,IAEhBmC,EAObnC,EAPFoC,YAAeD,SAFe,EAS5BnC,EANFqC,KAH8B,IAI5BC,kBAAqBC,EAJO,EAIPA,WAAYtC,EAJL,EAIKA,MAEfuC,EANU,EAK5BC,KACEC,aAAgBF,SAKtB,OACE,kBAAC,IAAMrC,SAAP,KACE,kBAAC,eAAawC,SAAd,MACG,SAAAzC,GAAK,OACJ,kBAAC,IAAD,CAASA,MAAOA,GACd,gCACE,kBAAC,IAAD,CAAUA,MAAOA,GACf,mDADF,IACiC,kBAAC,IAAD,MAC9BiC,GAEH,uBAAGS,UAAU,QAAb,SACSL,EAAa,EAAI,MAAQ,KADlC,IACwC,gCAASA,GADjD,QAC2EA,EACzE,EACI,IACA,GAAI,IAJV,oBAOA,kBAAC,IAAD,CAAMtC,MAAOA,EAAOC,MAAOA,SAMnC,kBAAC,IAAD,CAAKsC,SAAUA,MAad,IAAMK,EAAa","file":"component---src-templates-category-template-js-63568f1abaf3376b6125.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst List = props => {\n  const { edges, theme } = props;\n\n  return (\n    <React.Fragment>\n      <ul>\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug }\n            }\n          } = edge;\n\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        ul {\n          margin: ${theme.space.stack.m};\n          padding: ${theme.space.m};\n          list-style: circle;\n        }\n        li {\n          padding: ${theme.space.xs} 0;\n          font-size: ${theme.font.size.s};\n          line-height: ${theme.font.lineHeight.l};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default List;\n","export { default } from \"./List\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Headline = props => {\r\n  const { title, children, theme } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {title ? <h1>{title}</h1> : <h1>{children}</h1>}\r\n\r\n      {/* --- STYLES --- */}\r\n      <style jsx>{`\r\n        h1 {\r\n          font-size: ${theme.font.size.xxl};\r\n          margin: ${theme.space.stack.l};\r\n          animation-name: headlineEntry;\r\n          animation-duration: ${theme.time.duration.long};\r\n\r\n          :global(span) {\r\n            font-weight: ${theme.font.weight.standard};\r\n            display: block;\r\n            font-size: 0.5em;\r\n            letter-spacing: 0;\r\n            margin: ${theme.space.stack.xs};\r\n          }\r\n\r\n          :global(svg) {\r\n            height: 0.75em;\r\n            fill: ${theme.color.brand.primary};\r\n          }\r\n        }\r\n\r\n        @keyframes headlineEntry {\r\n          from {\r\n            opacity: 0.5;\r\n          }\r\n          to {\r\n            opacity: 1;\r\n          }\r\n        }\r\n\r\n        @from-width tablet {\r\n          h1 {\r\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\r\n          }\r\n        }\r\n\r\n        @from-width desktop {\r\n          h1 {\r\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\r\n          }\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nHeadline.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Headline;\r\n","import { FaTag } from \"react-icons/fa/\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Seo from \"../components/Seo\";\r\nimport { ThemeContext } from \"../layouts\";\r\nimport Article from \"../components/Article\";\r\nimport Headline from \"../components/Article/Headline\";\r\nimport List from \"../components/List\";\r\n\r\nconst CategoryTemplate = props => {\r\n  const {\r\n    pageContext: { category },\r\n    data: {\r\n      allMarkdownRemark: { totalCount, edges },\r\n      site: {\r\n        siteMetadata: { facebook }\r\n      }\r\n    }\r\n  } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <Article theme={theme}>\r\n            <header>\r\n              <Headline theme={theme}>\r\n                <span>Posts in category</span> <FaTag />\r\n                {category}\r\n              </Headline>\r\n              <p className=\"meta\">\r\n                There {totalCount > 1 ? \"are\" : \"is\"} <strong>{totalCount}</strong> post{totalCount >\r\n                1\r\n                  ? \"s\"\r\n                  : \"\"}{\" \"}\r\n                in the category.\r\n              </p>\r\n              <List edges={edges} theme={theme} />\r\n            </header>\r\n          </Article>\r\n        )}\r\n      </ThemeContext.Consumer>\r\n\r\n      <Seo facebook={facebook} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCategoryTemplate.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  pageContext: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CategoryTemplate;\r\n\r\n// eslint-disable-next-line no-undef\r\nexport const categoryQuery = graphql`\r\n  query PostsByCategory($category: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [fields___prefix], order: DESC }\r\n      filter: { frontmatter: { category: { eq: $category } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            category\r\n          }\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        facebook {\r\n          appId\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}